BLOCK 1

1. В каком случае время выполнения операции с HashMap будет равно O(n)?
- при чтении из-за LinkedList, или при добавлении из-за массива
- во всех остальных случаях O(1)

2. Зачем использовать Comparator с методом compare(), если уже есть Comparable с методом compareTo()?
-Иногда мы не можем изменить исходный код класса, объекты которого мы хотим отсортировать, что делает использование Comparable невозможным.
-Использование Comparators позволяет нам избежать добавления дополнительного кода в наши доменные классы
-Мы можем определить несколько различных стратегий сравнения, что невозможно при использовании Comparable

3. Что произойдет если добавить дубликат в Set?
-ничего, метод add() вернет false

4. Как можно реализовать граф (невзвеш/взвеш) в Java?
-невзвешанный - HashMap<String, List<String>>
-взвешанный - через отдельный класс вес указываем в конструкторе

5. Зачем добавили ArrayList если уже был Vector?
-методы в ArrayList не являются синхронизированными(потокобезопасными), что делает его быстрее

6. Ковариантность. Что будет если попытаться получить потомок Type из List<? extends Type>?
-код не скомпилируется
-Во время компиляции кода неизвестно, объекты какого именно класса будут содержаться в листе. Допустим, это будут объекты Class3. Тогда в этой строке
Class4 class4 = list.get(0);
мы получим объект класса-предка и попытаемся положить его в переменную, имеющую тип класса-потомка, чего Java конечно же сделать неявно не позволит. 
Впрочем, если мы гарантируем компилятору, что точно знаем, объекты какого класса будут лежать в данном листе, то легко сможем с ним договориться.
Class4 class4 = (Class4) list.get(0);

7. Как можно отменить коммит в Git, если он уже был опубликован ?
-делав обратный коммит с помощью команды git revert [commit SHA]. Это создаст коммит отменяющий изменения указанного коммита. 
После необходимо отправить изменения в удаленный репозиторий с помощью команды git push [repository]/branch-name. Если коммит сделан на личной ветке, не используемой никем кроме автора, ошибочный коммит можно отметить флагом drop в интерактивном режиме ребейза (git rebase -i), 
что полностью удалит указанный коммит из истории. После необходимо отправить изменения в удаленный репозиторий с помощью команды git push [repository]/branch-name с флагом force.

8. За что отвечает команда Git stash?
-команда сохраняющая измененное состояние рабочей директории или отдельного файла в хранилище незавершенных изменений. Это дает возможность в любой момент применить их обратно. Например, если нужно переключиться между ветками без фиксации изменений, можно применить команду git stash, рабочая директория останется без изменений, данные будут сохранены в специальном хранилище. 
Для просмотра спрятанных изменений нужно вызвать команду git stash list, а для применения — git stash apply.

9. Перечислить методы Iterator
-default void forEachRemaining(Consumer<? super E> action) Performs the given action for each remaining element until all elements have been processed or the action throws an exception.
-boolean	hasNext() Returns true if the iteration has more elements.
-E	next() Returns the next element in the iteration.
-default void	remove() Removes from the underlying collection the last element returned by this iterator (optional operation).

10. Что такое инвариантность?
-Инвариантность List<Type> — ситуация, когда наследование исходных типов не переносится на производные. Например при попытке вставить в спискок с объектами класса А список с объектами класса В, объекты которого наследуются от объектов класса А.
Присваивание (=): только List<Type>
get(): Type и предки
add(): Type и наследники


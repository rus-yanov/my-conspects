СОДЕРЖАНИЕ ПО СТРОКАМ
Бинарный поиск              -30
Big O                       -61
Сортировка выбором          -70

























БИНАРНЫЙ ПОИСК 
алгоритм поиска в отсортированном списке элементов

- при каждой итерации исключается половина элементов
- для списка из n элементов бинарный поиск выполняется за log2n шагов

Код:
// цель: найти индекс item в списке list
int search(List<Integer> list, int item) {
// определяем границы поиска
  int low = 0;
  int high = list.size() - 1;
  
  int mid;
  int guess;
  
  // пока эта часть не сократится до одного элемента
  while (low <= high) {
    mid = (low + high) / 2;
    guess = list.get(mid);
    if (guess == item) {
      return mid ; 
    } else if (guess > item) {
      high = mid - 1;
    } else {
      low = mid + 1;
    }
  }
  return -1;
}
-------------------------------------------------------------------------------
BIG O
сравнивает количество операций, а не скорость в секундах

O(log n) - логарифмическое время. Пример: бинарный поиск
O(n) - линейное время. Пример: простой поиск методом перебора
O(n * log n) - Пример: эффективные алгоритмы сортировки
O(n^2) - Пример: вложеные циклы
O(n!) - Пример: очень медленные алгоритмы
-------------------------------------------------------------------------------
CОРТИРОВКА ВЫБОРОМ

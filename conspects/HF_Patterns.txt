СОДЕРЖАНИЕ











ЗНАКОМСТВО С ПАТТЕРНАМИ
Принципы проектирования
1 - Инкапсулиррвать то, что изменяется
2 - Программировать на уровне интерфейсов, а не на уровне реализации
3 - Отдавать предпочтение композиции (partof) перед наследованием (isthat). Таким образом мы получаем значительно большую гибкость системы
4 - Стремиться к слабой связанности
! используя сеттеры можно даже изменять поведения в процессе выполнения

ПАТТЕРН СТРАТЕГИЯ (поведенческий) - определяет семейство алгоритмов, инкапсулирует каждый из них и обеспечивает и взаимозаменяемость. Он позволяет модифицировать алгоритмы независимо от их использования на стороне клиента.
Реализация: Объект содержит в виде полей реализации интерфейсов, которые постоянно меняясь позволяют различным экземплярам класса объекта менять поведение.

ПАТТЕРН НАБЛЮДАТЕЛЬ (поведенческий) - определяет отношение типа "один ко многим" между объектами. Когда состояние одного объекта изменяется все зависимые объекты получают оповещения.
Реализация: Создаются 2 интерфейса - Subject (методы: registerObserver, removeObserver, notifyObserver), Observer (метод: update). Внутри реализации Subject-a инкапсулируется список Observer-ов и при вызове метода notifyObserver каждый элемент из списка наблюдателей с помощью цикла проходит через метод update() - observer.update(a, b, c ...).

ПАТТЕРН ДЕКОРАТОР  (структурный) - 

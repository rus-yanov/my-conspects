ИСТОРИЯ И РАЗВИТИЕ JAVA

Язык С созданный в вначале 70-х решил много вопросов, но по прежнему придерживался структурного подходу в программировании 
(методология, которая позволяет писать программу как набор блоков. Такими блоками являются ветвления, циклы, последовательность 
операторов, процедуры). Таким образом, хоть С и является одним из лучших ЯП, существует предел его способности справляться
со сложностью программ.
С++ был изобретен в 1979, он расширяет возможности С, добавляя в него объектно-ориентированные свойства.

ООП - это методика программирования, которая помогает организовывать сложные программы, применяя принципы наследованя,
инкапсуляции и полиморфизма.

1991 г. Дж.Гослинг, П.Нотон, К.Уарт, Э.Франк и М.Шеридан начинают работу над созданием языка Oak, а в 1995 г. он переименован в
Java. Цель создания: создание с его помощью ПО встраиваемого в различные бытовые электронные усторойства, для этого ЯП не должен
зависеть от какой-то конкретной платформы, процессора и среды. В то же время формируется Web, что еще больше подтолкнуло развитие 
Java, потому что к Интернету подключены разнотипные платформы, и пользователям желательно, чтобы на всех этих платформах можно 
было выполнять одинаковые программы. Таким образом постепенно внимание разработчиков Java перешло с бытовой электроники на
программирование для Интернета. 
Синтаксис Java был унаследован от C, а объектно-ориентированные свойства от C++. 
Java углубил и усовершенствовал ООП использованный в С++, добавил в него поддержку многопоточной обработки и предоставил библиотеку,
которая упростила доступ в Интернет. Java обусловил появление нового типа прикладных программ, предназначенных для работы в сети -
Аплетов.

Аплет - это особый вид прикладной программы на Java, предназначенный для передачи через Интернет и автоматического выполнения в
совместимом с Java веб-браузере. Аплеты создаются в виде небольших программ. Как правило, они служат для отображения данных, 
предоставляемых сервером, обработки действий пользователя или выполнения локально, а не на сервере, таких простых функций,
как вычисление процентов по кредитам. По существу, аплет позволяет перенести ряд функций со стороны сервера на сторону клиента.
Со временем аплеты потеряли свое значение, поскольку им на смену пришли другие механизмы доставки динамических, активных программ 
через Интернет. 
Java ограничивает действие аплета исполняющей средой Java, не предоставляя ему доступ к другим частям операционной системы компьютера.
Возможность загружать аплеты в полной уверенности, что это не нанесет системе никакого вреда и не нарушит ее безопасность, многие 
специалисты и пользователи считают наиболее новаторским аспектом Java. 

Основная особенность Java, которая позволяет решать описанные выше проблемы обеспечения безопасности и переносимости программ, 
состоит в том, что компилятор Java выдает не исполняемый код, а так называемый байт-код - в высшей степени оптимизированный набор 
инструкций, предназначенных для выполнения в исполняющей системе Java, называемой виртуальной машиной Java (JVM). Собственно говоря,
первоначальная версия JVM разрабатывалась в качестве интерпретатора байт-кода.
Все виртуальные машины JVM на разных платформах, несмотря на некоторые отличия и особенности их реализации, способны правильно 
интерпретировать один и тот же байт-код. Виртуальная машина JVM управляет выполнением программы, поэтому она может изолировать программу,
чтобы создать ограниченную исполняющую среду, которая называется "песочничей" и содержит программу, препятствующую неограниченному
доступу к машине.
Когда программа компилируется в промежуточную форму, а затем интерпретируется виртуальной машиной JVM, она выполняется медленнее, чем 
если бы она была скомпилирована в исполняемый код. Но в Java это отличие в производительности не слишком заметно. Байт-код существенно 
оптимизирован, и поэтому его применение позволяет виртуальной машине JVM выполнять программы значительно быстрее, чем следовало ожидать.

JVM - содержит динамический компилятор, который оперативно компилирует байт-код в машинозависимый код.
JRE - программное обеспечение которое содержит JVM и основные библиотеки Java. JRE должен быть установлен на машине где запускаются
приложения написанные на Java
JDK - набор программ для разработки на Java. Включает в себя JRE, загрузчик кода java, компилятор javac, архиватор jar, генератор 
документации javadoc и другие утилиты, нужные во время разработки.

Аплеты решали лишь половину задачи в архитектуре "клиент-сервер': Вскоре после появления языка Java стало очевидно, что он может 
пригодиться и на серверах. В результате появились сервлеты. Сервлет - это небольшая прикладная программа, выполняемая на сервере.

Надежность.
Для обеспечения надежности в Java налагается ряд ограничений в нескольких наиболее важных областях, что вынуждает программистов 
выявлять ошибки на ранних этапах разработки программы. Поскольку Java - строго типизированный язык, то проверка кода выполняется 
во время компиляции. Но проверка кода делается и во время выполнения. В результате многие трудно обнаруживаемые программные ошибки,
которые часто приводят к возникновению с трудом воспроизводимых ситуаций во время выполнения, попросту невозможны в программе на Java.
Предсказуемость кода в разных ситуациях - одна из основных особенностей Java. 
Чтобы понять, каким образом достигается надежность программ на Java, рассмотрим две основные причины программных сбоев: ошибки 
управления памятью и неправильная обработка исключений (т.е. ошибки при выполнении). В традиционных средах создания программ управление
памятью - сложная и трудоемкая задача. Java полностью исключает такие ситуации, автоматически управляя резервированием и освобождением 
памяти.

Распределенность
Язык Java предназначен для распределенной среды Интернета, поскольку он поддерживает семейство сетевых протоколов TCP/IP. По существу, 
обращение к ресурсу по унифицированному указателю информационного ресурса (URL) мало чем отличается от обращения к файлу. В языке Java 
поддерживается также удаленный вызов методов (Remote Method Invocation - RMI). Такая возможность позволяет вызывать методы из программ 
через сеть. 



КРАТКИЙ ОБЗОР JAVA
